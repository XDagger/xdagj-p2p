name: Code Quality

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  license-check:
    name: License Header Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Check license headers
      run: mvn license:check

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    # Only run on push to main branches, not on PRs (can be slow)
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    # Optional: Run OWASP Dependency Check
    # Uncomment if you want automated security scanning
    # - name: Run dependency check
    #   run: mvn org.owasp:dependency-check-maven:check
    #   continue-on-error: true

    # - name: Upload dependency check report
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: dependency-check-report
    #     path: target/dependency-check-report.html

  code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Full history for better analysis

    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Compile and verify
      run: mvn clean verify -DskipTests

    # Optional: Add SpotBugs or other static analysis tools
    # - name: Run SpotBugs
    #   run: mvn spotbugs:check
    #   continue-on-error: true

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Verify build reproducibility
      run: |
        mvn clean package -DskipTests
        JAR_SIZE=$(stat -f%z target/*.jar 2>/dev/null || stat -c%s target/*.jar)
        echo "JAR size: $JAR_SIZE bytes"

        # Build again and compare
        mvn clean package -DskipTests
        JAR_SIZE_2=$(stat -f%z target/*.jar 2>/dev/null || stat -c%s target/*.jar)
        echo "JAR size (2nd build): $JAR_SIZE_2 bytes"

        if [ "$JAR_SIZE" != "$JAR_SIZE_2" ]; then
          echo "Warning: Build may not be reproducible"
        else
          echo "Build is reproducible"
        fi
